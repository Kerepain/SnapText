name: Build Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build with PyInstaller
      run: |
        pyinstaller SnapText.spec
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: SnapText-Windows
        path: dist/SnapText.exe
        
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create macOS spec file
      run: |
        cat > SnapText-macOS.spec << 'EOL'
        # -*- mode: python ; coding: utf-8 -*-
        
        block_cipher = None
        
        a = Analysis(
            ['src/app.py'],
            pathex=[],
            binaries=[],
            datas=[('assets', 'assets')],
            hiddenimports=[
                'PyQt6', 
                'PIL', 
                'numpy', 
                'reportlab',
                'src.ui',
                'src.processors',
                'src.utils',
                'src.config'
            ],
            hookspath=[],
            hooksconfig={},
            runtime_hooks=[],
            excludes=[],
            win_no_prefer_redirects=False,
            win_private_assemblies=False,
            cipher=block_cipher,
            noarchive=False,
        )
        
        pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)
        
        exe = EXE(
            pyz,
            a.scripts,
            [],
            exclude_binaries=True,
            name='SnapText',
            debug=False,
            bootloader_ignore_signals=False,
            strip=False,
            upx=True,
            console=False,
            disable_windowed_traceback=False,
            argv_emulation=True,
            target_arch=None,
            codesign_identity=None,
            entitlements_file=None,
            icon='assets/logo.ico',
        )
        
        coll = COLLECT(
            exe,
            a.binaries,
            a.zipfiles,
            a.datas,
            strip=False,
            upx=True,
            upx_exclude=[],
            name='SnapText',
        )
        
        app = BUNDLE(
            coll,
            name='SnapText.app',
            icon='assets/logo.ico',
            bundle_identifier='com.kltions.snaptext',
        )
        EOL
        
    - name: Build with PyInstaller for macOS
      run: |
        pyinstaller SnapText-macOS.spec
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: SnapText-macOS
        path: dist/SnapText.app
        
  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: SnapText-Windows
        path: windows
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: SnapText-macOS
        path: macos
        
    - name: Zip macOS application
      run: |
        cd macos
        zip -r SnapText-macOS.zip SnapText.app
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows/SnapText.exe
          macos/SnapText-macOS.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 